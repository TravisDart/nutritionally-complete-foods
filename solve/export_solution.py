from typing import Optional
from utils import dict_to_ordered_tuples
from load_data import load_real_data, load_subset_of_data, load_requirements
from solve import solve_it


def export_food_data(selected_food_ids: Optional[list[int]]):
    foods, _ = load_real_data()
    if selected_food_ids:
        selected_foods = [food for food in foods if int(food[0]) in selected_food_ids]
        return selected_foods
    else:
        return foods


if __name__ == "__main__":
    # All the 7-food solutions that we've found so far
    solutions = [
        # Solutions from the first pass:
        (2009, 4531, 9520, 11998, 14412, 20129, 31020),
        (4038, 9192, 9520, 11936, 14412, 31020, 43449),
        (4047, 9436, 9520, 11998, 14412, 16112, 31020),
        (4047, 9520, 11993, 14412, 31020, 35206, 43449),
        (4510, 9436, 9520, 11998, 14412, 16112, 31020),
        (4516, 9436, 9520, 11998, 14412, 16112, 31020),
        (4517, 9436, 9520, 11998, 14412, 16112, 31020),
        (4518, 9436, 9520, 11998, 14412, 16112, 31020),
        (4518, 9520, 11993, 14412, 31020, 35206, 43449),
        (4518, 9520, 11998, 14412, 31020, 35206, 43449),
        (4531, 9520, 11271, 11936, 14412, 20129, 31020),
        (4531, 9520, 11428, 11936, 14412, 20522, 31020),
        (4531, 9520, 11576, 11936, 14412, 20129, 31020),
        (4531, 9520, 11577, 11936, 14412, 20522, 31020),
        (4531, 9520, 11615, 11936, 14412, 20129, 31020),
        (4531, 9520, 11615, 11998, 14412, 20129, 31020),
        (4581, 9436, 9520, 11998, 14412, 16112, 31020),
        (4588, 9436, 9520, 11998, 14412, 16112, 31020),
        (9112, 9520, 11998, 12156, 14412, 16112, 31020),
        (9383, 9520, 11998, 12156, 14412, 16112, 31019),
        (9383, 9520, 11998, 12156, 14412, 16112, 31020),
        (9520, 11266, 11507, 11998, 12156, 14412, 16112),
        (9520, 11266, 11936, 12156, 14412, 16112, 35206),
        (9520, 11507, 11998, 12156, 14412, 16112, 31019),
        (9520, 11936, 14412, 31020, 35092, 35206, 43449),
        (9520, 11998, 12156, 14412, 16112, 31019, 35206),
        (9520, 11998, 14412, 31020, 35092, 35206, 43449),
        # Solutions from subsequent passes:
        (4037, 9192, 9520, 11998, 14412, 31020, 43449),
        (4037, 9436, 9520, 11998, 14412, 16112, 31020),
        (4037, 9520, 11998, 14412, 31019, 35206, 43449),
        (4038, 9024, 9520, 11936, 14412, 31020, 43449),
        (4038, 9024, 9520, 11998, 14412, 16112, 31020),
        (4038, 9192, 9520, 11998, 14412, 31020, 43449),
        (4038, 9282, 9520, 11938, 14412, 16112, 31019),
        (4038, 9282, 9520, 11998, 14412, 31020, 43449),
        (4038, 9520, 11939, 14412, 31020, 35206, 43449),
        (4038, 9520, 11998, 14412, 31019, 35206, 43449),
        (4038, 9520, 11998, 14412, 31020, 35206, 43449),
        (4042, 9520, 11998, 14412, 31019, 35206, 43449),
        (4044, 9436, 9520, 11998, 14412, 16112, 31020),
        (4047, 9024, 9520, 11998, 14412, 16112, 31020),
        (4047, 9282, 9520, 11938, 14412, 16112, 31019),
        (4047, 9328, 9520, 11125, 11998, 14412, 16112),
        (4047, 9328, 9520, 11655, 11998, 14412, 16112),
        (4047, 9436, 9520, 11998, 14412, 16112, 31019),
        (4047, 9520, 11998, 14412, 31019, 35206, 43449),
        (4047, 9520, 11998, 14412, 31020, 35206, 43449),
        (4053, 9520, 11998, 14412, 31019, 35206, 43449),
        (4055, 9520, 11993, 14412, 31020, 35206, 43449),
        (4058, 9192, 9520, 11998, 14412, 31020, 43449),
        (4058, 9328, 9520, 11125, 11998, 14412, 16112),
        (4060, 9277, 9520, 11998, 14412, 16112, 31020),
        (4060, 9436, 9520, 11998, 14412, 16112, 31020),
        (4502, 9192, 9520, 11998, 14412, 31020, 43449),
        (4506, 9436, 9520, 11998, 14412, 16112, 31020),
        (4510, 9282, 9520, 11938, 14412, 16112, 31019),
        (4510, 9520, 11938, 14412, 16112, 31020, 35206),
        (4511, 9436, 9520, 11998, 14412, 16112, 31020),
        (4513, 9436, 9520, 11998, 14412, 16112, 31020),
        (4513, 9520, 11938, 14412, 16112, 31020, 35206),
        (4514, 9282, 9520, 11938, 14412, 16112, 31019),
        (4514, 9436, 9520, 11998, 14412, 16112, 31020),
        (4514, 9520, 11993, 14412, 31020, 35206, 43449),
        (4514, 9520, 11998, 14412, 31020, 35206, 43449),
        (4515, 9277, 9520, 11998, 14412, 16112, 31020),
        (4515, 9282, 9520, 11938, 14412, 16112, 31019),
        (4515, 9328, 9520, 11125, 11998, 14412, 16112),
        (4515, 9328, 9520, 11655, 11998, 14412, 16112),
        (4515, 9436, 9520, 11998, 14412, 16112, 31020),
        (4515, 9520, 11998, 14412, 31019, 35206, 43449),
        (4515, 9520, 11998, 14412, 31020, 35206, 43449),
        (4516, 9282, 9520, 11938, 14412, 16112, 31019),
        (4516, 9282, 9520, 11938, 14412, 16112, 31020),
        (4516, 9520, 11993, 14412, 31020, 35206, 43449),
        (4516, 9520, 11998, 14412, 31020, 35206, 43449),
        (4517, 9328, 9520, 11125, 11998, 14412, 16112),
        (4517, 9328, 9520, 11655, 11998, 14412, 16112),
        (4528, 9192, 9520, 11998, 14412, 31020, 43449),
        (4528, 9328, 9520, 11125, 11998, 14412, 16112),
        (4528, 9520, 11998, 14412, 31019, 35206, 43449),
        (4529, 9520, 11998, 14412, 31019, 35206, 43449),
        (4529, 9520, 11998, 14412, 31020, 35206, 43449),
        (4530, 9277, 9520, 11998, 14412, 16112, 31020),
        (4530, 9436, 9520, 11998, 14412, 16112, 31020),
        (4530, 9520, 11993, 14412, 31020, 35206, 43449),
        (4530, 9520, 11998, 14412, 31020, 35206, 43449),
        (4531, 9112, 9520, 11936, 14412, 20129, 31020),
        (4531, 9192, 9520, 11936, 14412, 31019, 43449),
        (4531, 9192, 9520, 11936, 14412, 31020, 43449),
        (4531, 9192, 9520, 11998, 14412, 31019, 43449),
        (4531, 9192, 9520, 11998, 14412, 31020, 43449),
        (4531, 9282, 9520, 11936, 14412, 31020, 43449),
        (4531, 9282, 9520, 11998, 14412, 31020, 43449),
        (4531, 9436, 9520, 11998, 14412, 16112, 31020),
        (4531, 9520, 11086, 11936, 14412, 20129, 31020),
        (4531, 9520, 11207, 11936, 14412, 20129, 31020),
        (4531, 9520, 11208, 11936, 14412, 20129, 31019),
        (4531, 9520, 11208, 11936, 14412, 20129, 31020),
        (4531, 9520, 11257, 11936, 14412, 20129, 31019),
        (4531, 9520, 11257, 11936, 14412, 20129, 31020),
        (4531, 9520, 11271, 11936, 14412, 20129, 31019),
        (4531, 9520, 11422, 11998, 14412, 20129, 31019),
        (4531, 9520, 11487, 11936, 14412, 20129, 31019),
        (4531, 9520, 11487, 11936, 14412, 20129, 31020),
        (4531, 9520, 11504, 11936, 14412, 20129, 31019),
        (4531, 9520, 11504, 11936, 14412, 20129, 31020),
        (4531, 9520, 11505, 11936, 14412, 20055, 31019),
        (4531, 9520, 11505, 11936, 14412, 20055, 31020),
        (4531, 9520, 11505, 11936, 14412, 20129, 31019),
        (4531, 9520, 11505, 11998, 14412, 20055, 31019),
        (4531, 9520, 11517, 11936, 14412, 20129, 31019),
        (4531, 9520, 11577, 11936, 14412, 20422, 31020),
        (4531, 9520, 11591, 11998, 14412, 20019, 31020),
        (4531, 9520, 11998, 14412, 31019, 35206, 43449),
        (4532, 9436, 9520, 11998, 14412, 16112, 31020),
        (4532, 9520, 11998, 14412, 31019, 35206, 43449),
        (4534, 9024, 9520, 11998, 14412, 16112, 31020),
        (4534, 9436, 9520, 11998, 14412, 16112, 31020),
        (4534, 9520, 11993, 14412, 31020, 35206, 43449),
        (4536, 9024, 9520, 11998, 14412, 16112, 31020),
        (4536, 9328, 9520, 11125, 11998, 14412, 16112),
        (4536, 9436, 9520, 11998, 14412, 16112, 31020),
        (4536, 9520, 11993, 14412, 31020, 35206, 43449),
        (4541, 9024, 9520, 11998, 14412, 16112, 31020),
        (4541, 9328, 9520, 11125, 11998, 14412, 16112),
        (4541, 9436, 9520, 11998, 14412, 16112, 31020),
        (4541, 9520, 11993, 14412, 31020, 35206, 43449),
        (4541, 9520, 11998, 14412, 31019, 35206, 43449),
        (4541, 9520, 11998, 14412, 31020, 35206, 43449),
        (4572, 9282, 9520, 11938, 14412, 16112, 31019),
        (4572, 9328, 9520, 11125, 11998, 14412, 16112),
        (4572, 9436, 9520, 11998, 14412, 16112, 31020),
        (4572, 9520, 11993, 14412, 31020, 35206, 43449),
        (4572, 9520, 11998, 14412, 31020, 35206, 43449),
        (4573, 9282, 9520, 11938, 14412, 16112, 31019),
        (4573, 9436, 9520, 11998, 14412, 16112, 31020),
        (4573, 9520, 11998, 14412, 31020, 35206, 43449),
        (4581, 9282, 9520, 11938, 14412, 16112, 31019),
        (4581, 9282, 9520, 11938, 14412, 16112, 31020),
        (4581, 9328, 9520, 11125, 11998, 14412, 16112),
        (4581, 9436, 9520, 11998, 14412, 16112, 31019),
        (4581, 9520, 11998, 14412, 31020, 35206, 43449),
        (4582, 9328, 9520, 11655, 11998, 14412, 16112),
        (4583, 9192, 9520, 11938, 14412, 16112, 31020),
        (4583, 9328, 9520, 11125, 11998, 14412, 16112),
        (4583, 9328, 9520, 11655, 11998, 14412, 16112),
        (4584, 9277, 9520, 11998, 14412, 16112, 31020),
        (4588, 9192, 9520, 11936, 14412, 31020, 43449),
        (4588, 9192, 9520, 11998, 14412, 31020, 43449),
        (4588, 9282, 9520, 11938, 14412, 16112, 31020),
        (4588, 9520, 11938, 14412, 16112, 31020, 35206),
        (4669, 9436, 9520, 11998, 14412, 16112, 31020),
        (4707, 9192, 9520, 11938, 14412, 16112, 31020),
        (4707, 9282, 9520, 11938, 14412, 16112, 31020),
        (4707, 9436, 9520, 11998, 14412, 16112, 31020),
        (4707, 9520, 11993, 14412, 31020, 35206, 43449),
        (9024, 9520, 11998, 14412, 16112, 31020, 42231),
        (9192, 9195, 9520, 11998, 14355, 31020, 43449),
        (9192, 9520, 11936, 12156, 14412, 16112, 31019),
        (9192, 9520, 11936, 14412, 16112, 31019, 42231),
        (9192, 9520, 11938, 12156, 14412, 16112, 31020),
        (9192, 9520, 11998, 12156, 14412, 16112, 31019),
        (9192, 9520, 11998, 12156, 14412, 16112, 31020),
        (9195, 9277, 9520, 11998, 14412, 16112, 31019),
        (9195, 9277, 9520, 11998, 14412, 16112, 31020),
        (9195, 9520, 11998, 14355, 31019, 35206, 43449),
        (9195, 9520, 11998, 14355, 31020, 35206, 43449),
        (9282, 9520, 11938, 14412, 16112, 31020, 42231),
        (9328, 9520, 11125, 11998, 12156, 14412, 16112),
        (9328, 9520, 11125, 11998, 14412, 16112, 35092),
        (9328, 9520, 11655, 11998, 14412, 16112, 35092),
        (9383, 9520, 11936, 12156, 14412, 16112, 31019),
        (9436, 9520, 11998, 14412, 16112, 31020, 35092),
        (9520, 11124, 11505, 11998, 12156, 14412, 16112),
        (9520, 11124, 11998, 12156, 14412, 16112, 20027),
        (9520, 11124, 11998, 12156, 14412, 16112, 20068),
        (9520, 11125, 11998, 12156, 14412, 16112, 20027),
        (9520, 11125, 11998, 12156, 14412, 16112, 20068),
        (9520, 11125, 11998, 14412, 16112, 35092, 48052),
        (9520, 11130, 11998, 14412, 16112, 35092, 48052),
        (9520, 11131, 11998, 12156, 14412, 16112, 20027),
        (9520, 11131, 11998, 14412, 16112, 35092, 48052),
        (9520, 11265, 11507, 11936, 12156, 14412, 16112),
        (9520, 11271, 11945, 11998, 14412, 16112, 35092),
        (9520, 11271, 11998, 14412, 16112, 35092, 48052),
        (9520, 11424, 11998, 12156, 14412, 16112, 20027),
        (9520, 11487, 11998, 12156, 14412, 16112, 31019),
        (9520, 11507, 11936, 12156, 14412, 16112, 31019),
        (9520, 11507, 11998, 12156, 14412, 16112, 31020),
        (9520, 11655, 11998, 14412, 16112, 20027, 35092),
        (9520, 11938, 12156, 14412, 16112, 31019, 35206),
        (9520, 11960, 11998, 12156, 14412, 16112, 20027),
        (9520, 11960, 11998, 14412, 16112, 35092, 48052),
    ]

    min_requirements, max_requirements, _ = load_requirements()

    foods = {}
    for i, solution in enumerate(solutions):
        print(f"Solution {i + 1}:")

        foods_in_solution, _ = load_subset_of_data(ids=solution)

        solver_result = solve_it(
            min_requirements,
            max_requirements,
            foods_in_solution,
            num_foods=len(solution),
        )
        food_quantity = list(solver_result.values())[0]["food_quantity"]
        tuple_solution = dict_to_ordered_tuples(food_quantity)
        print(tuple_solution)

        for food_id in solution:
            if food_id not in foods:
                foods[food_id] = export_food_data([food_id])[0]
            print(food_id, foods[food_id][2], f"({food_quantity[str(food_id)]:,}g)")

        print()

    print("Solutions are made up of these foods:")
    for food_id in foods:
        print(food_id, foods[food_id][2])
